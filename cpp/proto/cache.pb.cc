// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/cache.proto
// Protobuf C++ Version: 5.29.3

#include "proto/cache.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cache {
              template <typename>
PROTOBUF_CONSTEXPR CacheEntry_MetadataEntry_DoNotUse::CacheEntry_MetadataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : CacheEntry_MetadataEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : CacheEntry_MetadataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct CacheEntry_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CacheEntry_MetadataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CacheEntry_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CacheEntry_MetadataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CacheEntry_MetadataEntry_DoNotUseDefaultTypeInternal _CacheEntry_MetadataEntry_DoNotUse_default_instance_;

inline constexpr CacheEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metadata_{},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CacheEntry::CacheEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CacheEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CacheEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CacheEntryDefaultTypeInternal() {}
  union {
    CacheEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CacheEntryDefaultTypeInternal _CacheEntry_default_instance_;

inline constexpr CacheResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entry_{nullptr},
        lookup_time_ns_{::int64_t{0}},
        found_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CacheResponse::CacheResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CacheResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CacheResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CacheResponseDefaultTypeInternal() {}
  union {
    CacheResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CacheResponseDefaultTypeInternal _CacheResponse_default_instance_;

inline constexpr CacheRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entry_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CacheRequest::CacheRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CacheRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CacheRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CacheRequestDefaultTypeInternal() {}
  union {
    CacheRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CacheRequestDefaultTypeInternal _CacheRequest_default_instance_;
}  // namespace cache
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fcache_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fcache_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fcache_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cache::CacheEntry_MetadataEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheEntry_MetadataEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cache::CacheEntry_MetadataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheEntry_MetadataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cache::CacheEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cache::CacheEntry, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheEntry, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheEntry, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheEntry, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cache::CacheRequest, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheRequest, _impl_.entry_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cache::CacheResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cache::CacheResponse, _impl_.found_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheResponse, _impl_.entry_),
        PROTOBUF_FIELD_OFFSET(::cache::CacheResponse, _impl_.lookup_time_ns_),
        ~0u,
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::cache::CacheEntry_MetadataEntry_DoNotUse)},
        {12, -1, -1, sizeof(::cache::CacheEntry)},
        {24, 34, -1, sizeof(::cache::CacheRequest)},
        {36, 47, -1, sizeof(::cache::CacheResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cache::_CacheEntry_MetadataEntry_DoNotUse_default_instance_._instance,
    &::cache::_CacheEntry_default_instance_._instance,
    &::cache::_CacheRequest_default_instance_._instance,
    &::cache::_CacheResponse_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fcache_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021proto/cache.proto\022\005cache\"\236\001\n\nCacheEntr"
    "y\022\013\n\003key\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\022\021\n\ttimestam"
    "p\030\003 \001(\003\0221\n\010metadata\030\004 \003(\0132\037.cache.CacheE"
    "ntry.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003k"
    "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"=\n\014CacheRequ"
    "est\022\013\n\003key\030\001 \001(\t\022 \n\005entry\030\002 \001(\0132\021.cache."
    "CacheEntry\"X\n\rCacheResponse\022\r\n\005found\030\001 \001"
    "(\010\022 \n\005entry\030\002 \001(\0132\021.cache.CacheEntry\022\026\n\016"
    "lookup_time_ns\030\003 \001(\003b\006proto3"
};
static ::absl::once_flag descriptor_table_proto_2fcache_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fcache_2eproto = {
    false,
    false,
    348,
    descriptor_table_protodef_proto_2fcache_2eproto,
    "proto/cache.proto",
    &descriptor_table_proto_2fcache_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_proto_2fcache_2eproto::offsets,
    file_level_enum_descriptors_proto_2fcache_2eproto,
    file_level_service_descriptors_proto_2fcache_2eproto,
};
namespace cache {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              CacheEntry_MetadataEntry_DoNotUse::CacheEntry_MetadataEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              CacheEntry_MetadataEntry_DoNotUse::CacheEntry_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              CacheEntry_MetadataEntry_DoNotUse::CacheEntry_MetadataEntry_DoNotUse() : SuperType() {}
              CacheEntry_MetadataEntry_DoNotUse::CacheEntry_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* CacheEntry_MetadataEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) CacheEntry_MetadataEntry_DoNotUse(arena);
              }
              constexpr auto CacheEntry_MetadataEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CacheEntry_MetadataEntry_DoNotUse),
                                                          alignof(CacheEntry_MetadataEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull CacheEntry_MetadataEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_CacheEntry_MetadataEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &CacheEntry_MetadataEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<CacheEntry_MetadataEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &CacheEntry_MetadataEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &CacheEntry_MetadataEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(CacheEntry_MetadataEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &CacheEntry_MetadataEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_proto_2fcache_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* CacheEntry_MetadataEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> CacheEntry_MetadataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CacheEntry_MetadataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cache::CacheEntry_MetadataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CacheEntry_MetadataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CacheEntry_MetadataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CacheEntry_MetadataEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(CacheEntry_MetadataEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\3\5\0\0\0\0\0"
    "cache.CacheEntry.MetadataEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class CacheEntry::_Internal {
 public:
};

CacheEntry::CacheEntry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cache.CacheEntry)
}
inline PROTOBUF_NDEBUG_INLINE CacheEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cache::CacheEntry& from_msg)
      : metadata_{visibility, arena, from.metadata_},
        key_(arena, from.key_),
        data_(arena, from.data_),
        _cached_size_{0} {}

CacheEntry::CacheEntry(
    ::google::protobuf::Arena* arena,
    const CacheEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CacheEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:cache.CacheEntry)
}
inline PROTOBUF_NDEBUG_INLINE CacheEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : metadata_{visibility, arena},
        key_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void CacheEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
CacheEntry::~CacheEntry() {
  // @@protoc_insertion_point(destructor:cache.CacheEntry)
  SharedDtor(*this);
}
inline void CacheEntry::SharedDtor(MessageLite& self) {
  CacheEntry& this_ = static_cast<CacheEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CacheEntry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CacheEntry(arena);
}
constexpr auto CacheEntry::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_.metadata_) +
          decltype(CacheEntry::_impl_.metadata_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_.metadata_) +
          decltype(CacheEntry::_impl_.metadata_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CacheEntry), alignof(CacheEntry), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CacheEntry::PlacementNew_,
                                 sizeof(CacheEntry),
                                 alignof(CacheEntry));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CacheEntry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CacheEntry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CacheEntry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CacheEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CacheEntry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CacheEntry>(), &CacheEntry::ByteSizeLong,
            &CacheEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_._cached_size_),
        false,
    },
    &CacheEntry::kDescriptorMethods,
    &descriptor_table_proto_2fcache_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CacheEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 36, 2> CacheEntry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cache::CacheEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_.key_)}},
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_.data_)}},
    // int64 timestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CacheEntry, _impl_.timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // map<string, string> metadata = 4;
    {PROTOBUF_FIELD_OFFSET(CacheEntry, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(CacheEntry()._impl_.metadata_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\20\3\0\0\10\0\0\0"
    "cache.CacheEntry"
    "key"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void CacheEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:cache.CacheEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  _impl_.key_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _impl_.timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CacheEntry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CacheEntry& this_ = static_cast<const CacheEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CacheEntry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CacheEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cache.CacheEntry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string key = 1;
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cache.CacheEntry.key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes data = 2;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // int64 timestamp = 3;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_timestamp(), target);
          }

          // map<string, string> metadata = 4;
          if (!this_._internal_metadata().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_metadata();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cache.CacheEntry.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cache.CacheEntry.metadata");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    4, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cache.CacheEntry.metadata");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cache.CacheEntry.metadata");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cache.CacheEntry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CacheEntry::ByteSizeLong(const MessageLite& base) {
          const CacheEntry& this_ = static_cast<const CacheEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CacheEntry::ByteSizeLong() const {
          const CacheEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cache.CacheEntry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> metadata = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_metadata_size());
              for (const auto& entry : this_._internal_metadata()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string key = 1;
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
            // bytes data = 2;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // int64 timestamp = 3;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CacheEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CacheEntry*>(&to_msg);
  auto& from = static_cast<const CacheEntry&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cache.CacheEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CacheEntry::CopyFrom(const CacheEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cache.CacheEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CacheEntry::InternalSwap(CacheEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata CacheEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CacheRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CacheRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CacheRequest, _impl_._has_bits_);
};

CacheRequest::CacheRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cache.CacheRequest)
}
inline PROTOBUF_NDEBUG_INLINE CacheRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cache::CacheRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_) {}

CacheRequest::CacheRequest(
    ::google::protobuf::Arena* arena,
    const CacheRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CacheRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.entry_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cache::CacheEntry>(
                              arena, *from._impl_.entry_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cache.CacheRequest)
}
inline PROTOBUF_NDEBUG_INLINE CacheRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        key_(arena) {}

inline void CacheRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.entry_ = {};
}
CacheRequest::~CacheRequest() {
  // @@protoc_insertion_point(destructor:cache.CacheRequest)
  SharedDtor(*this);
}
inline void CacheRequest::SharedDtor(MessageLite& self) {
  CacheRequest& this_ = static_cast<CacheRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  delete this_._impl_.entry_;
  this_._impl_.~Impl_();
}

inline void* CacheRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CacheRequest(arena);
}
constexpr auto CacheRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CacheRequest),
                                            alignof(CacheRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CacheRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CacheRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CacheRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CacheRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CacheRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CacheRequest>(), &CacheRequest::ByteSizeLong,
            &CacheRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CacheRequest, _impl_._cached_size_),
        false,
    },
    &CacheRequest::kDescriptorMethods,
    &descriptor_table_proto_2fcache_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CacheRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 30, 2> CacheRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CacheRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cache::CacheRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cache.CacheEntry entry = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CacheRequest, _impl_.entry_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CacheRequest, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(CacheRequest, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cache.CacheEntry entry = 2;
    {PROTOBUF_FIELD_OFFSET(CacheRequest, _impl_.entry_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cache::CacheEntry>()},
  }}, {{
    "\22\3\0\0\0\0\0\0"
    "cache.CacheRequest"
    "key"
  }},
};

PROTOBUF_NOINLINE void CacheRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cache.CacheRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.entry_ != nullptr);
    _impl_.entry_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CacheRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CacheRequest& this_ = static_cast<const CacheRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CacheRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CacheRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cache.CacheRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string key = 1;
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cache.CacheRequest.key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cache.CacheEntry entry = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.entry_, this_._impl_.entry_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cache.CacheRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CacheRequest::ByteSizeLong(const MessageLite& base) {
          const CacheRequest& this_ = static_cast<const CacheRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CacheRequest::ByteSizeLong() const {
          const CacheRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cache.CacheRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string key = 1;
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
          }
           {
            // .cache.CacheEntry entry = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.entry_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CacheRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CacheRequest*>(&to_msg);
  auto& from = static_cast<const CacheRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cache.CacheRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.entry_ != nullptr);
    if (_this->_impl_.entry_ == nullptr) {
      _this->_impl_.entry_ =
          ::google::protobuf::Message::CopyConstruct<::cache::CacheEntry>(arena, *from._impl_.entry_);
    } else {
      _this->_impl_.entry_->MergeFrom(*from._impl_.entry_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CacheRequest::CopyFrom(const CacheRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cache.CacheRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CacheRequest::InternalSwap(CacheRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  swap(_impl_.entry_, other->_impl_.entry_);
}

::google::protobuf::Metadata CacheRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CacheResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CacheResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_._has_bits_);
};

CacheResponse::CacheResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cache.CacheResponse)
}
inline PROTOBUF_NDEBUG_INLINE CacheResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cache::CacheResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CacheResponse::CacheResponse(
    ::google::protobuf::Arena* arena,
    const CacheResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CacheResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.entry_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cache::CacheEntry>(
                              arena, *from._impl_.entry_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, lookup_time_ns_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, lookup_time_ns_),
           offsetof(Impl_, found_) -
               offsetof(Impl_, lookup_time_ns_) +
               sizeof(Impl_::found_));

  // @@protoc_insertion_point(copy_constructor:cache.CacheResponse)
}
inline PROTOBUF_NDEBUG_INLINE CacheResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CacheResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, entry_),
           0,
           offsetof(Impl_, found_) -
               offsetof(Impl_, entry_) +
               sizeof(Impl_::found_));
}
CacheResponse::~CacheResponse() {
  // @@protoc_insertion_point(destructor:cache.CacheResponse)
  SharedDtor(*this);
}
inline void CacheResponse::SharedDtor(MessageLite& self) {
  CacheResponse& this_ = static_cast<CacheResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.entry_;
  this_._impl_.~Impl_();
}

inline void* CacheResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CacheResponse(arena);
}
constexpr auto CacheResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CacheResponse),
                                            alignof(CacheResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CacheResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CacheResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CacheResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CacheResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CacheResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CacheResponse>(), &CacheResponse::ByteSizeLong,
            &CacheResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_._cached_size_),
        false,
    },
    &CacheResponse::kDescriptorMethods,
    &descriptor_table_proto_2fcache_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CacheResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> CacheResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cache::CacheResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool found = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CacheResponse, _impl_.found_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_.found_)}},
    // .cache.CacheEntry entry = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_.entry_)}},
    // int64 lookup_time_ns = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CacheResponse, _impl_.lookup_time_ns_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_.lookup_time_ns_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool found = 1;
    {PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_.found_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .cache.CacheEntry entry = 2;
    {PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_.entry_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 lookup_time_ns = 3;
    {PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_.lookup_time_ns_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cache::CacheEntry>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CacheResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cache.CacheResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.entry_ != nullptr);
    _impl_.entry_->Clear();
  }
  ::memset(&_impl_.lookup_time_ns_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.found_) -
      reinterpret_cast<char*>(&_impl_.lookup_time_ns_)) + sizeof(_impl_.found_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CacheResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CacheResponse& this_ = static_cast<const CacheResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CacheResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CacheResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cache.CacheResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool found = 1;
          if (this_._internal_found() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_found(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cache.CacheEntry entry = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.entry_, this_._impl_.entry_->GetCachedSize(), target,
                stream);
          }

          // int64 lookup_time_ns = 3;
          if (this_._internal_lookup_time_ns() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_lookup_time_ns(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cache.CacheResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CacheResponse::ByteSizeLong(const MessageLite& base) {
          const CacheResponse& this_ = static_cast<const CacheResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CacheResponse::ByteSizeLong() const {
          const CacheResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cache.CacheResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .cache.CacheEntry entry = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.entry_);
            }
          }
           {
            // int64 lookup_time_ns = 3;
            if (this_._internal_lookup_time_ns() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_lookup_time_ns());
            }
            // bool found = 1;
            if (this_._internal_found() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CacheResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CacheResponse*>(&to_msg);
  auto& from = static_cast<const CacheResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cache.CacheResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.entry_ != nullptr);
    if (_this->_impl_.entry_ == nullptr) {
      _this->_impl_.entry_ =
          ::google::protobuf::Message::CopyConstruct<::cache::CacheEntry>(arena, *from._impl_.entry_);
    } else {
      _this->_impl_.entry_->MergeFrom(*from._impl_.entry_);
    }
  }
  if (from._internal_lookup_time_ns() != 0) {
    _this->_impl_.lookup_time_ns_ = from._impl_.lookup_time_ns_;
  }
  if (from._internal_found() != 0) {
    _this->_impl_.found_ = from._impl_.found_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CacheResponse::CopyFrom(const CacheResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cache.CacheResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CacheResponse::InternalSwap(CacheResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_.found_)
      + sizeof(CacheResponse::_impl_.found_)
      - PROTOBUF_FIELD_OFFSET(CacheResponse, _impl_.entry_)>(
          reinterpret_cast<char*>(&_impl_.entry_),
          reinterpret_cast<char*>(&other->_impl_.entry_));
}

::google::protobuf::Metadata CacheResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace cache
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fcache_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
